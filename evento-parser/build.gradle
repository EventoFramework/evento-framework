plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'com.eventoframework'
version 'ev1.11.6' // + '-SNAPSHOT'
java {
    targetCompatibility = "21"
    targetCompatibility = "21"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    // https://mvnrepository.com/artifact/net.sourceforge.pmd/pmd-java
    implementation 'net.sourceforge.pmd:pmd-java:6.55.0'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.10'


    // https://mvnrepository.com/artifact/org.ow2.asm/asm-commons
    implementation 'org.ow2.asm:asm-commons:9.4'
    // https://mvnrepository.com/artifact/org.ow2.asm/asm-util
    implementation 'org.ow2.asm:asm-util:9.4'
    // https://mvnrepository.com/artifact/org.ow2.asm/asm
    implementation 'org.ow2.asm:asm:9.2'

    implementation 'org.reflections:reflections:0.10.2'
    implementation project(':evento-common')

}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

publishing {
    publications{
        mavenJava(MavenPublication){
            groupId = group
            artifactId = 'evento-parser'
            version = version
            from components.java
            pom {
                name = "Evento Framework - Parser"
                description = "Codebase Parser to detect RECQ Components for Evento Framework"
                url = "https://www.eventoframework.com/"

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://raw.githubusercontent.com/EventoFramework/evento-framework/main/LICENSE.txt"
                    }
                }

                developers {
                    developer {
                        id = "gaborgalazzo"
                        name = "Gabor Galazzo"
                        email = "gabor.galazzo@gmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/EventoFramework/evento-framework.git"
                    developerConnection = "scm:git:ssh://github.com/EventoFramework/evento-framework.git"
                    url = "https://github.com/EventoFramework/evento-framework/tree/main/evento-parser"
                }
            }



            repositories {
                maven {
                    name = 'ossrh-staging-api'
                    url = "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"
                    credentials {
                        username = project.properties["mavenCentralUsername"]
                        password = project.properties["mavenCentralPassword"]
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc{
    if(JavaVersion.current().isJava9Compatible()){
        options.addBooleanOption("html5", true)
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}